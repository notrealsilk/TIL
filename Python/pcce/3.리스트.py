# 리스트 자료형 : 여러개의 자료를 하나로 묶어서 표현하는 자료형
# 개별 자료의 종류는 제한이 없고, 서로 달라도 됨
# 리스트는 자료의 추가, 제거가 자유롭다

#리스트 생성
x=[]
y=list()
z=[3,4,5]

# 리스트에서 자료에 접근하기 (인덱싱)
x=[10,20,30,40]
print(x[0]) #0부터 시작하는 인덱싱 (첫번쨰 값)
print(x[3]) #0부터 시작하는 인덱싱 (세번쨰 값)
print(x[-1]) #0부터 시작하는 인덱싱 (끝에서 첫번쨰 값)

x[2]=999
print(f'x={x}')

# 리스트 슬라이싱
x=[10,20,30,40,50,60]
print(x[1:3]) #1부터 시작해서 3 바로 전까지 잘라서 리스트로 출력
print(x[:4])
print(x[:]) #0부터 시작 (생략)해서 끝까지(생략) 잘라서 리스트로
print(x[1:5:2]) #1~4를 2칸씩 이동해서 자른다. // [20,40]
print(x[::2]) #전체를 (생략) 2칸씩 이동해서 자른다 [10,30,50]

#x하고 x[:]는 같을까?
y=x #y는 x와 같은 리스틑 참조한다.
z=x[:] #여기에 새로운 리스트가 만들어진다.
print(f'x={x}') #여기까지는 두 값이 같다. // x=[10,20,30,40,50,60]
print(f'z={z}') #z=[10,20,30,40,50,60]

x[2]=999 #값을 변경 (값 개수가 달라지지 않음)
print(f'y={y}') #y와 x는 같은 리스트이기 때문에 같이 바뀐다. //y=[10,20,999,40,50,60]
print(f'z={z}') # x를 복사해서 만든 리스트이기 때문에 같이 안 바뀐다. //z=[10,20,30,40,50,60]

# 리스트 자료 추가하기
x=[10,20,30]
print(f'x={x}')
x.append(40) #리스트 뒤쪽에 자료를 추가한다.
print(f'x={x}') #x=[10, 20, 30, 40]
x=x+[1,2,3]
print(f'x={x}') # x=[10, 20, 30, 40, 1, 2, 3]
x=[4,5,6]+x
print(f'x={x}') # x=[4, 5, 6, 10, 20, 30, 40, 1, 2, 3]
x=x[:3]+[1000]+x[3:] #값을 추가 (값이 늘어남)
print(f'x={x}') #x=[4, 5, 6, 1000, 10, 20, 30, 40, 1, 2, 3]

#리스트에서 자료 삭제
x=[10,20,30,40,50,60,70]
x.remove(30)
print(f'x={x}') #x=[10, 20, 40, 50, 60, 70]
del x[1] #인덱스 1번을 삭제
print(f'x={x}') #x=[10, 40, 50, 60, 70]
y=x.pop(0) #특정 인덱스에 있는 값을 삭제
print(f'x={x}') # x=[40, 50, 60, 70]
print(f'y={y}') # y=10 / pop은 삭제한 값을 y로 받아냄
x[:3]=[] #특정 슬라이스 제거
print(f'x={x}') #x=[70]

#보너스 : 같은 값이 여러 개일 경우 자료 삭제
x=[10,20,20,30,50,30,60,10]
x.remove(30) #같은 값이 여러 개면, 그 중 맨 앞에 있는 것이 삭제
print(f'x={x}') # x=[10, 20, 20, 50, 30, 60, 10] // 앞에 있는 30만 삭제
# x.remove(40) #없는 값을 삭제하려하면 오류가 남

#리스트 부가기능
x=[40,10,60,80,30,5]
print(f'x={x}')
x.sort() #오름차순으로 정렬
print(f'x={x}') #x=[5, 10, 30, 40, 60, 80]

x.sort(reverse=True) #내림차순으로 정렬 // 아니면 x=[::-1]
print(f'x={x}') #x=[80, 60, 40, 30, 10, 5]

x.reverse() #순서 뒤집기
print(f'x={x}') #x=[5, 10, 30, 40, 60, 80]

y=x.index(40) #값이 몇번쨰 인덱스에 위치해 있는지 반환
print(f'y={y}') #y=3 (여러 개면 맨 앞에 있는 것을 반환)

x=[5, 10, 30,10, 40, 10, 60, 80]
y=x.count(10) #값이 몇개 있는지 반환
print(f'y={y}') #y=3

N=len(x) #리스트의 길이를 반환
print(f'N={N}') #N=8

x=[10,20,30,40,50,60]
print(x[:])