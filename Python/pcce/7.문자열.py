# 문자열
#문자열은 불변형으로, 내용을 수정할 수 없다.
#작은 따옴표 또는 큰 따옴표로 들러쌓여있다

#문자열 생성하기
x="'문자열 생성하기'"
print(x)
x='"문자열 생성하기"'
print(x)
x='\'문자열\' 생성하기' # 작은따옴표 안에 작은 따옴표 쓰려면 백슬래시 사용(\#이스케이프 문자
print(x)
x='''문자열
여러줄
만들기
가능''' #여러줄 출력
print(x)

# 문자열 접근
x='This is string'
print(x[3])
print(type(x[3]))

x = x +'a,b,c' # 튜플처럼 문자열 이어붙이기는 가능
print(x) #This is stringa,b,c

#문자열 이어붙이기 (comcatenation)
a='abc'
b='def'
print(a+b) #print(b+a)
print(a*3) # 문자열을 *로 반복해서 이어붙일 수 있다
print(a*-4) #반복이 안되는 경우, 빈 문자열을 반환
#print(a*2.5) #반복 횟수는 정수만 가능

#문자열 이어붙이기 (join)
x=['사과','배', '감', '바나나']
print(x) #['사과', '배', '감', '바나나']
y=''.join(x) # 빈 문자열을 사이에 넣어서 리스트에 있는 모든 문자열을 연결
print(y) #사과배감바나나 
y=','.join(x) # 문자열 사이에 ,를 넣어서 리스트에 있는 모든 문자열 연결
print(y) #사과,배,감,바나나

#문자열 분리하기
x='콤마로,구분되어,있는,문자열,입니다.'
y=x.split() # ,를 기준으로 문자열을 분리
print(y) #['콤마로,구분되어,있는,문자열,입니다.']

x = '공백으로 구분된 문자열 입니다.'
print(x.split(' ')) #['공백으로', '구분된', '문자열', '입니다.']

x = '공백,또는 콤마로 구분된,문자열 입니다.'
print(x.replace(' ', ',').split(',')) 
#['공백', '또는', '콤마로', '구분된', '문자열', '입니다.']
#replace로 공백을 콤마로 변경 후 split

print()
print('문자열 이어붙이기(concatenate)')
x = 'abc'
y = 'def'
print(x + y) # 문자열끼리 더하면 이어 붙인다.
print(x * 3)
print(x*-4) #반복이 안되는 경우, 빈 문자열을 반환
#print(a*2.5) #반복 횟수는 정수만 가능

#문자열 포매팅 방법1_전통적인 출력방법 (c언어부터 사용)
print('%d' % 154) #문자열에 %d (십진수)를 사용하면, 어떤 숫자를 십진수로 표현하라 #154
print('%d는 %d보다 크다'%(35, 10)) # 35는 10보다 크다
x = 35
y = 10
print ('%d와 %d를 가지고 있다' % (x,y)) # 35와 10를 가지고 있다
print('%f'%3.141592) # %f (부동소수점 실수)는 실수 삾으로 표현하라 는 의미 # 3.141592
print('%f'% 100) # 정수 값을 넘겨도 실수로 출력 # 100.000000
print('%d'%3.141592)#실수 값을 념거도 실수로 출력 # 3
print('%.3f'%3.141592) #소수점 뒤에 3자리만 표기 # 3.142
print('%10.3f' %3.141592 ) #숫자 전체가 10칸을 차지하고, 오른쪽 정렬 #헷갈릴 수 ㅇ #      3.142
print('-%10.3f' %3.141592 ) #숫자 전체가 10칸을 차지하고, 왼쪽 정렬 # -     3.142
print('-%10d' %100 ) #숫자 전체가 10칸을 차지하고, 오른쪽 정렬 # -       100
print('%10s %s %s'% ('문자열도', '안에', '넣을 수 있다'))
print('%1d' % 1234) #칸이 모자라면 넘어설 수도 있디. 내용은 전부 출력된다. # 1234

#문자열 포맷팅 방법2_ format()을 이용한 포맷팅

print('{} is a number'.format(3.14)) #3.14 is a number
print('{} {} {} {}'.format(10,20,30,'are numbers.')) #10 20 30 are numbers.
print('{a} {b} {c}'.format(a=10, b=30, c=50))
s = '''당신의 이름은 {full_name} 입니다.
하지만 당신의 진짜 이름은 {short_name} 입니다''' 
print(s.format(full_name='홍길동', short_name='길동'))
'''당신의 이름은 홍길동 입니다.
하지만 당신의 진짜 이름은 길동 입니다'''



#문자열 포맷팅 방법3_f-string을 이용한 방법 (요즘 많이 사용하는 방법)

print(f'x={1+2}') #x=3 #{}안에 있는게 계산되어 문자열로 출력 # x=3
x=1+2
print(f'x={x}') # x=3
x='     앞 뒤로 공백이 있는 문자열'
print(f'문자열:{x.strip}') #참고..strip() -  앞뒤 공백을 제거해 주는 메소드 # 문자열:
